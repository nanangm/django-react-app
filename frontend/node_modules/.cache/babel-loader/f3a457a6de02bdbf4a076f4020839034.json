{"ast":null,"code":"var _jsxFileName = \"/Users/minsaknanang/webdev/django-react-app/frontend/src/components/OnHold.js\";\nimport React, { useState, useEffect } from 'react';\nimport './OnHold.css';\nexport default function (props) {\n  const [remaining, setRemaining] = useState(props.duration);\n  useEffect(() => {\n    const _timer = setTimeout(() => {\n      setRemaining(remaining - 1);\n    }, 1000);\n\n    return function cleanup() {\n      clearTimeout(_timer);\n    };\n  });\n\n  if (remaining <= 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OnHold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Your tickets are on hold for the next \", remaining, \" seconds.\");\n}\nexport class OnHold extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remaining: props.duration\n    };\n  }\n\n  componentDidMount() {\n    this._timer = setInterval(() => {\n      const remaining = this.state.remaining - 1;\n      this.setState({\n        remaining\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._timer);\n  }\n\n  render() {\n    const {\n      remaining\n    } = this.state;\n\n    if (remaining <= 1) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"OnHold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \"Your tickets are on hold for the next \", remaining, \" seconds.\");\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/minsaknanang/webdev/django-react-app/frontend/src/components/OnHold.js"],"names":["React","useState","useEffect","props","remaining","setRemaining","duration","_timer","setTimeout","cleanup","clearTimeout","OnHold","Component","constructor","state","componentDidMount","setInterval","setState","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAACE,KAAK,CAACG,QAAP,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGC,UAAU,CAAC,MAAM;AAC9BH,MAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACD,KAFwB,EAEtB,IAFsB,CAAzB;;AAGA,WAAO,SAASK,OAAT,GAAmB;AACxBC,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACD,KAFD;AAGD,GAPQ,CAAT;;AASA,MAAIH,SAAS,IAAI,CAAjB,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQA,SAFR,cADF;AAMD;AAED,OAAO,MAAMO,MAAN,SAAqBX,KAAK,CAACY,SAA3B,CAAqC;AAC1CC,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKW,KAAL,GAAa;AAAEV,MAAAA,SAAS,EAAED,KAAK,CAACG;AAAnB,KAAb;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,MAAL,GAAcS,WAAW,CAAC,MAAM;AAC9B,YAAMZ,SAAS,GAAG,KAAKU,KAAL,CAAWV,SAAX,GAAuB,CAAzC;AACA,WAAKa,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KAHwB,EAGtB,IAHsB,CAAzB;AAID;;AAEDc,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKZ,MAAN,CAAb;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAgB,KAAKU,KAA3B;;AACA,QAAIV,SAAS,IAAI,CAAjB,EAAoB;AAClB,aAAO,IAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEQA,SAFR,cADF;AAMD;;AA7ByC;AA8B3C","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './OnHold.css';\n\nexport default function(props) {\n  const [remaining, setRemaining] = useState(props.duration);\n\n  useEffect(() => {\n    const _timer = setTimeout(() => {\n      setRemaining(remaining - 1);\n    }, 1000);\n    return function cleanup() {\n      clearTimeout(_timer);\n    };\n  })\n\n  if (remaining <= 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"OnHold\">\n      Your tickets are on hold for the\n      next {remaining} seconds.\n    </div>\n  );\n}\n\nexport class OnHold extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { remaining: props.duration };\n  }\n\n  componentDidMount() {\n    this._timer = setInterval(() => {\n      const remaining = this.state.remaining - 1;\n      this.setState({ remaining });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._timer);\n  }\n\n  render() {\n    const { remaining } = this.state;\n    if (remaining <= 1) {\n      return null;\n    }\n\n    return (\n      <div className=\"OnHold\">\n        Your tickets are on hold for the\n        next {remaining} seconds.\n      </div>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}